// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

It is generated from these files:
	api.proto
*/
package api

import (
	"context"

	bm "github.com/bilibili/kratos/pkg/net/http/blademaster"
	"github.com/bilibili/kratos/pkg/net/http/blademaster/binding"
)
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathDemoPing = "/liveroom.service.v1.Demo/Ping"
var PathDemoCreate = "/liveroom.service.v1.Demo/Create"
var PathDemoDelete = "/liveroom.service.v1.Demo/Delete"
var PathDemoGet = "/live-room/get"

// DemoBMServer is the server API for Demo service.
type DemoBMServer interface {
	Ping(ctx context.Context, req *google_protobuf1.Empty) (resp *google_protobuf1.Empty, err error)

	Create(ctx context.Context, req *Req) (resp *Resp, err error)

	Delete(ctx context.Context, req *Req) (resp *Resp, err error)

	Get(ctx context.Context, req *Req) (resp *Resp, err error)
}

var DemoSvc DemoBMServer

func demoPing(c *bm.Context) {
	p := new(google_protobuf1.Empty)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := DemoSvc.Ping(c, p)
	c.JSON(resp, err)
}

func demoCreate(c *bm.Context) {
	p := new(Req)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := DemoSvc.Create(c, p)
	c.JSON(resp, err)
}

func demoDelete(c *bm.Context) {
	p := new(Req)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := DemoSvc.Delete(c, p)
	c.JSON(resp, err)
}

func demoGet(c *bm.Context) {
	p := new(Req)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := DemoSvc.Get(c, p)
	c.JSON(resp, err)
}

// RegisterDemoBMServer Register the blademaster route
func RegisterDemoBMServer(e *bm.Engine, server DemoBMServer) {
	DemoSvc = server
	e.GET("/liveroom.service.v1.Demo/Ping", demoPing)
	e.GET("/liveroom.service.v1.Demo/Create", demoCreate)
	e.GET("/liveroom.service.v1.Demo/Delete", demoDelete)
	e.GET("/live-room/get", demoGet)
}
